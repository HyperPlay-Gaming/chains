import {Chain, mainnet} from "viem/chains";
import {
    acala,
    ancient8,
    ancient8Sepolia,
    anvil,
    apexTestnet,
    arbitrum,
    arbitrumGoerli,
    arbitrumNova,
    astar,
    astarZkEVM,
    astarZkyoto,
    arbitrumSepolia,
    areonNetwork,
    areonNetworkTestnet,
    artelaTestnet,
    aurora,
    auroraTestnet,
    auroria,
    avalanche,
    avalancheFuji,
    bahamut,
    base,
    baseGoerli,
    baseSepolia,
    beam,
    beamTestnet,
    bearNetworkChainMainnet,
    bearNetworkChainTestnet,
    berachainTestnet,
    berachainTestnetbArtio,
    bevmMainnet,
    bitkub,
    bitkubTestnet,
    bitTorrent,
    bitTorrentTestnet,
    blast,
    blastSepolia,
    bob,
    boba,
    bronos,
    bronosTestnet,
    bsc,
    bscTestnet,
    bscGreenfield,
    btr,
    btrTestnet,
    bxn,
    bxnTestnet,
    canto,
    celo,
    celoAlfajores,
    chiliz,
    classic,
    confluxESpace,
    confluxESpaceTestnet,
    coreDao,
    crab,
    cronos,
    cronosTestnet,
    crossbell,
    cyber,
    cyberTestnet,
    darwinia,
    dchain,
    dchainTestnet,
    defichainEvm,
    defichainEvmTestnet,
    degen,
    dfk,
    dodochainTestnet,
    dogechain,
    dreyerxMainnet,
    edgeless,
    edgelessTestnet,
    edgeware,
    edgewareTestnet,
    eon,
    eos,
    eosTestnet,
    etherlink,
    etherlinkTestnet,
    evmos,
    evmosTestnet,
    ekta,
    ektaTestnet,
    fantom,
    fantomSonicTestnet,
    fantomTestnet,
    fibo,
    filecoin,
    filecoinCalibration,
    filecoinHyperspace,
    flare,
    flareTestnet,
    flowPreviewnet,
    flowMainnet,
    flowTestnet,
    foundry,
    fraxtal,
    fraxtalTestnet,
    funkiSepolia,
    fuse,
    fuseSparknet,
    iotex,
    iotexTestnet,
    jbc,
    jbcTestnet,
    karura,
    gobi,
    goerli,
    gnosis,
    gnosisChiado,
    ham,
    hardhat,
    harmonyOne,
    haqqMainnet,
    haqqTestedge2,
    hedera,
    hederaTestnet,
    hederaPreviewnet,
    holesky,
    immutableZkEvm,
    immutableZkEvmTestnet,
    inEVM,
    kakarotSepolia,
    kava,
    kavaTestnet,
    kcc,
    klaytn,
    klaytnBaobab,
    koi,
    kroma,
    kromaSepolia,
    l3x,
    l3xTestnet,
    lightlinkPegasus,
    lightlinkPhoenix,
    linea,
    lineaGoerli,
    lineaSepolia,
    lineaTestnet,
    lisk,
    liskSepolia,
    localhost,
    lukso,
    luksoTestnet,
    lycan,
    lyra,
    mandala,
    manta,
    mantaSepoliaTestnet,
    mantaTestnet,
    mantle,
    mantleSepoliaTestnet,
    mantleTestnet,
    merlin,
    metachain,
    metachainIstanbul,
    metalL2,
    meter,
    meterTestnet,
    metis,
    metisGoerli,
    mev,
    mevTestnet,
    mintSepoliaTestnet,
    mode,
    modeTestnet,
    moonbaseAlpha,
    moonbeam,
    moonbeamDev,
    moonriver,
    morphHolesky,
    morphSepolia,
    nautilus,
    neonDevnet,
    neonMainnet,
    nexi,
    nexilix,
    oasys,
    oasisTestnet,
    okc,
    optimism,
    optimismGoerli,
    optimismSepolia,
    opBNB,
    opBNBTestnet,
    oortMainnetDev,
    otimDevnet,
    palm,
    palmTestnet,
    playfiAlbireo,
    pgn,
    pgnTestnet,
    phoenix,
    plinga,
    plumeTestnet,
    polygon,
    polygonAmoy,
    polygonMumbai,
    polygonZkEvm,
    polygonZkEvmCardona,
    polygonZkEvmTestnet,
    pulsechain,
    pulsechainV4,
    qMainnet,
    qTestnet,
    real,
    redbellyTestnet,
    redstone,
    reyaNetwork,
    rollux,
    rolluxTestnet,
    ronin,
    rootstock,
    rootstockTestnet,
    rss3,
    rss3Sepolia,
    saigon,
    sapphire,
    sapphireTestnet,
    satoshiVM,
    satoshiVMTestnet,
    scroll,
    scrollSepolia,
    sei,
    seiDevnet,
    seiTestnet,
    sepolia,
    shimmer,
    shimmerTestnet,
    skaleBlockBrawlers,
    skaleCalypso,
    skaleCalypsoTestnet,
    skaleCryptoBlades,
    skaleCryptoColosseum,
    skaleEuropa,
    skaleEuropaTestnet,
    skaleExorde,
    skaleHumanProtocol,
    skaleNebula,
    skaleNebulaTestnet,
    skaleRazor,
    skaleTitan,
    skaleTitanTestnet,
    songbird,
    songbirdTestnet,
    spicy,
    shardeumSphinx,
    shibarium,
    shibariumTestnet,
    stratis,
    syscoin,
    syscoinTestnet,
    taraxa,
    taiko,
    taikoHekla,
    taikoJolnir,
    taikoKatla,
    taikoTestnetSepolia,
    taraxaTestnet,
    telcoinTestnet,
    telos,
    telosTestnet,
    tenet,
    thaiChain,
    thunderTestnet,
    unreal,
    vechain,
    wanchain,
    wanchainTestnet,
    wemix,
    wemixTestnet,
    xLayerTestnet,
    x1Testnet,
    xLayer,
    xai,
    xaiTestnet,
    xdc,
    xdcTestnet,
    xrSepolia,
    yooldoVerse,
    yooldoVerseTestnet,
    zetachain,
    zetachainAthensTestnet,
    zhejiang,
    zilliqa,
    zilliqaTestnet,
    zkFair,
    zkFairTestnet,
    zkLinkNova,
    zkLinkNovaSepoliaTestnet,
    zkSync,
    zkSyncInMemoryNode,
    zkSyncLocalNode,
    zkSyncSepoliaTestnet,
    zkSyncTestnet,
    zora,
    zoraSepolia,
    zoraTestnet,
    zircuitTestnet,
} from "viem/chains";
import {ChainMetadata} from "./common";

export const viem = [
    mainnet,
    acala,
    ancient8,
    ancient8Sepolia,
    anvil,
    apexTestnet,
    arbitrum,
    arbitrumGoerli,
    arbitrumNova,
    astar,
    astarZkEVM,
    astarZkyoto,
    arbitrumSepolia,
    areonNetwork,
    areonNetworkTestnet,
    artelaTestnet,
    aurora,
    auroraTestnet,
    auroria,
    avalanche,
    avalancheFuji,
    bahamut,
    base,
    baseGoerli,
    baseSepolia,
    beam,
    beamTestnet,
    bearNetworkChainMainnet,
    bearNetworkChainTestnet,
    berachainTestnet,
    berachainTestnetbArtio,
    bevmMainnet,
    bitkub,
    bitkubTestnet,
    bitTorrent,
    bitTorrentTestnet,
    blast,
    blastSepolia,
    bob,
    boba,
    bronos,
    bronosTestnet,
    bsc,
    bscTestnet,
    bscGreenfield,
    btr,
    btrTestnet,
    bxn,
    bxnTestnet,
    canto,
    celo,
    celoAlfajores,
    chiliz,
    classic,
    confluxESpace,
    confluxESpaceTestnet,
    coreDao,
    crab,
    cronos,
    cronosTestnet,
    crossbell,
    cyber,
    cyberTestnet,
    darwinia,
    dchain,
    dchainTestnet,
    defichainEvm,
    defichainEvmTestnet,
    degen,
    dfk,
    dodochainTestnet,
    dogechain,
    dreyerxMainnet,
    edgeless,
    edgelessTestnet,
    edgeware,
    edgewareTestnet,
    eon,
    eos,
    eosTestnet,
    etherlink,
    etherlinkTestnet,
    evmos,
    evmosTestnet,
    ekta,
    ektaTestnet,
    fantom,
    fantomSonicTestnet,
    fantomTestnet,
    fibo,
    filecoin,
    filecoinCalibration,
    filecoinHyperspace,
    flare,
    flareTestnet,
    flowPreviewnet,
    flowMainnet,
    flowTestnet,
    foundry,
    fraxtal,
    fraxtalTestnet,
    funkiSepolia,
    fuse,
    fuseSparknet,
    iotex,
    iotexTestnet,
    jbc,
    jbcTestnet,
    karura,
    gobi,
    goerli,
    gnosis,
    gnosisChiado,
    ham,
    hardhat,
    harmonyOne,
    haqqMainnet,
    haqqTestedge2,
    hedera,
    hederaTestnet,
    hederaPreviewnet,
    holesky,
    immutableZkEvm,
    immutableZkEvmTestnet,
    inEVM,
    kakarotSepolia,
    kava,
    kavaTestnet,
    kcc,
    klaytn,
    klaytnBaobab,
    koi,
    kroma,
    kromaSepolia,
    l3x,
    l3xTestnet,
    lightlinkPegasus,
    lightlinkPhoenix,
    linea,
    lineaGoerli,
    lineaSepolia,
    lineaTestnet,
    lisk,
    liskSepolia,
    localhost,
    lukso,
    luksoTestnet,
    lycan,
    lyra,
    mandala,
    manta,
    mantaSepoliaTestnet,
    mantaTestnet,
    mantle,
    mantleSepoliaTestnet,
    mantleTestnet,
    merlin,
    metachain,
    metachainIstanbul,
    metalL2,
    meter,
    meterTestnet,
    metis,
    metisGoerli,
    mev,
    mevTestnet,
    mintSepoliaTestnet,
    mode,
    modeTestnet,
    moonbaseAlpha,
    moonbeam,
    moonbeamDev,
    moonriver,
    morphHolesky,
    morphSepolia,
    nautilus,
    neonDevnet,
    neonMainnet,
    nexi,
    nexilix,
    oasys,
    oasisTestnet,
    okc,
    optimism,
    optimismGoerli,
    optimismSepolia,
    opBNB,
    opBNBTestnet,
    oortMainnetDev,
    otimDevnet,
    palm,
    palmTestnet,
    playfiAlbireo,
    pgn,
    pgnTestnet,
    phoenix,
    plinga,
    plumeTestnet,
    polygon,
    polygonAmoy,
    polygonMumbai,
    polygonZkEvm,
    polygonZkEvmCardona,
    polygonZkEvmTestnet,
    pulsechain,
    pulsechainV4,
    qMainnet,
    qTestnet,
    real,
    redbellyTestnet,
    redstone,
    reyaNetwork,
    rollux,
    rolluxTestnet,
    ronin,
    rootstock,
    rootstockTestnet,
    rss3,
    rss3Sepolia,
    saigon,
    sapphire,
    sapphireTestnet,
    satoshiVM,
    satoshiVMTestnet,
    scroll,
    scrollSepolia,
    sei,
    seiDevnet,
    seiTestnet,
    sepolia,
    shimmer,
    shimmerTestnet,
    skaleBlockBrawlers,
    skaleCalypso,
    skaleCalypsoTestnet,
    skaleCryptoBlades,
    skaleCryptoColosseum,
    skaleEuropa,
    skaleEuropaTestnet,
    skaleExorde,
    skaleHumanProtocol,
    skaleNebula,
    skaleNebulaTestnet,
    skaleRazor,
    skaleTitan,
    skaleTitanTestnet,
    songbird,
    songbirdTestnet,
    spicy,
    shardeumSphinx,
    shibarium,
    shibariumTestnet,
    stratis,
    syscoin,
    syscoinTestnet,
    taraxa,
    taiko,
    taikoHekla,
    taikoJolnir,
    taikoKatla,
    taikoTestnetSepolia,
    taraxaTestnet,
    telcoinTestnet,
    telos,
    telosTestnet,
    tenet,
    thaiChain,
    thunderTestnet,
    unreal,
    vechain,
    wanchain,
    wanchainTestnet,
    wemix,
    wemixTestnet,
    xLayerTestnet,
    x1Testnet,
    xLayer,
    xai,
    xaiTestnet,
    xdc,
    xdcTestnet,
    xrSepolia,
    yooldoVerse,
    yooldoVerseTestnet,
    zetachain,
    zetachainAthensTestnet,
    zhejiang,
    zilliqa,
    zilliqaTestnet,
    zkFair,
    zkFairTestnet,
    zkLinkNova,
    zkLinkNovaSepoliaTestnet,
    zkSync,
    zkSyncInMemoryNode,
    zkSyncLocalNode,
    zkSyncSepoliaTestnet,
    zkSyncTestnet,
    zora,
    zoraSepolia,
    zoraTestnet,
    zircuitTestnet,
] as const;

export const viemChainsMap = viem.reduce((acc, chain) => {
    acc[chain.id] = chain;
    return acc;
}, {} as Record<number, (typeof viem)[number]>);

type RpcUrls = {
    http: string[];
    webSocket?: string[];
};

export function parseChainMetadataToViemChain(
    chainMetadata: ChainMetadata
): Chain {
    const validRpcs = chainMetadata.chain.rpc.filter(
        (rpc) => !rpc.includes(`\${`)
    );

    const defaultRpcUrl = validRpcs[0];

    if (!defaultRpcUrl) {
        throw new Error("defaultRpcUrl is not defined");
    }

    const rpcUrls: Record<string, RpcUrls> = validRpcs.reduce((acc, url) => {
        acc[url] = {
            http: [url],
        };
        return acc;
    }, {} as Record<string, RpcUrls>);

    const wagmiChain: Chain = {
        id: chainMetadata.chain.chainId,
        name: chainMetadata.chain.name,
        nativeCurrency: {
            name: chainMetadata.chain.nativeCurrency.name,
            symbol: chainMetadata.chain.nativeCurrency.symbol,
            decimals: chainMetadata.chain.nativeCurrency.decimals,
        },
        rpcUrls: {
            ...rpcUrls,
            default: {
                http: [defaultRpcUrl],
            },
            public: {
                http: [defaultRpcUrl],
            },
        },
    };

    if (
        chainMetadata.chain.explorers &&
        chainMetadata.chain.explorers.length > 0
    ) {
        const defaultExplorer = chainMetadata.chain.explorers[0];

        const otherExplorers = chainMetadata.chain.explorers
            .slice(1)
            .reduce((acc, explorer) => {
                acc[explorer.name] = {
                    name: explorer.name,
                    url: explorer.url,
                };
                return acc;
            }, {} as Record<string, { name: string; url: string }>);

        wagmiChain.blockExplorers = {
            default: defaultExplorer,
            ...otherExplorers,
        };
    }

    return wagmiChain;
}


